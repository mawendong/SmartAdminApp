1、安装 Laravel Breeze

Laravel Breeze 是 Laravel 的 认证功能 的一种简单、最小实现，包括登录、注册、密码重置、电子邮件验证和密码确认。此外，Breeze 还包括一个简单的“个人资料”页面，用户可以在该页面上更新其姓名、电子邮件地址和密码。

composer require laravel/breeze

http://www.laravelphp.com/docs/67.html



//1-创建文章的表及其模型
php artisan make:model -m Article
//2-定义模型工厂，生成测试数据
php artisan make:factory ArticleFactory
//3-创建控制器 (--resource 是资源控制器，可以方便的处理增删查改)
php artisan make:controller ArticleController --resource


//创建迁移文件
php artisan make:migration add_avatar_to_users --table=users
php artisan migrate 

//建立登录日志表
php artisan make:migration create_login_logs_table
php artisan migrate
php artisan make:model LoginLog
php artisan make:controller LoginLogController --resource
php artisan make:seeder LoginLogSeeder //创建填充类文件
php artisan db:seed --class=LoginLogSeeder //运行数据库填充命令填充初始化数据(注意引用类的路径，和部分函数在8版本中被移除)
php artisan db:seed --class=ArticleSeeder //运行数据库填充命令填充初始化数据(注意引用类的路径，和部分函数在8版本中被移除)
php artisan make:factory LoginLogFactory

//增加字段
php artisan make:migration add_user_agent_to_login_logs --table=login_logs
php artisan migrate 






//1-创建迁移
    一、php artisan make:migration create_types_talbe --create=types //创建迁移文件
    二、database/migrations/*****_create_types_table.php //编辑里面的表字段
    三、php artisan migrate //运行数据库迁移命令
//2-添加路由
    Route::resource('types', TypesController::class); //添加路由
//3-添加控制器 (--resource 是资源控制器，可以方便的处理增删查改)
    php artisan make:controller TypesController --resource --model=Types
    php artisan make:controller ArticlesController --resource --model=Articles

//4-创建填充类文件
    php artisan make:seeder ArticlesSeeder      //创建填充类文件
    php artisan db:seed --class=ArticlesSeeder  //运行数据库填充命令填充初始化数据(注意引用类的路径，和部分函数在8版本中被移除)
    php artisan migrate:fresh --seed --seeder=UserSeeder //运行数据库迁移命令，刷新数据库，并填充测试数据（此命令对于完全重建数据库非常有用。）
    php artisan db:seed --force //运行数据库填充命令，强制刷新数据库，保留现有数据，并重新填充测试数据。


//1-创建分类的表及其模型
php artisan make:model -m Tests //创建分类的表及其模型
//2-定义模型工厂，生成测试数据
php artisan make:factory TypesFactory
//3-创建控制器 (--resource 是资源控制器，可以方便的处理增删查改)
php artisan make:controller TypesController --resource

//路由列表
php artisan route:list 
//过滤查询路由列表
php artisan route:list --name=types
//缓存路由
php artisan route:cache
//清除缓存
php artisan config:clear  
//清除缓存
php artisan route:clear




//运行数据库迁移命令
php artisan migrate

//创建模型工厂文件
php artisan make:factory ArticleFactory --model=Article

//命令创建一个新的填充类文件
php artisan make:seeder ArticleTableSeeder
//运行数据库填充命令填充初始化数据(注意引用类的路径，和部分函数在8版本中被移除)
php artisan db:seed
//创建控制器
php artisan make:controller ArticleController
//查看应用中的所有路由
php artisan route:list

//中控

//数据表,表命名是英文复数形式加s结尾
users
articles
menus
projects
scripts
devices
datas

php artisan make:model -m Models/Article
php artisan make:factory ArticleFactory --model=Models/Article
php artisan make:seeder ArticlesTableSeeder


php artisan make:controller ArticlesController --resource


php artisan make:controller TestController

//创建资源控制器
php artisan make:controller HelpController --resource

//DebugBar调试条,GIthub
https://github.com/barryvdh/laravel-debugbar
 //DebugBar调试条
composer require barryvdh/laravel-debugbar
//DebugBar调试条，本地存储配置
php artisan vendor:publish --provider="Barryvdh\Debugbar\ServiceProvider"




php artisan make:model -m Models/Article
php artisan make:factory ArticleFactory --model=Models/Article
php artisan make:seeder ArticlesTableSeeder


debugbar
config/debugbar.php
'enabled' => env('APP_DEBUG', false),